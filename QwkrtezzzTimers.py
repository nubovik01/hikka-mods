#                  _         _                   
#    __ ___      _| | ___ __| |_ ___ ____________
#   / _` \ \ /\ / / |/ / '__| __/ _ \_  /_  /_  /
#  | (_| |\ V  V /|   <| |  | ||  __// / / / / / 
#   \__, | \_/\_/ |_|\_\_|   \__\___/___/___/___|
#      |_|                                       
#                 ¬© Copyright 2023
#              https://t.me/qwkrtezzz
#                   
# üîí         Licensed under the GNU AGPLv3
# üåê   https://www.gnu.org/licenses/agpl-3.0.html
#
# meta developer: @nbvkxd

from .. import loader, utils
from datetime import datetime

def getTime(month, day):
  now = datetime.now()
  date = datetime(now.year, month, day)

  if now.month > month or (now.month == month and now.day > day):
    date = datetime(now.year+1, month, day)
    timeToIt = abs(date-now)

  return timeToIt

class QwkrtezzzTimers(loader.Module):
  '''–¢–∞–π–º–µ—Ä—ã –¥–æ –Ω–∞—á–∞–ª–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π'''

  strings = {'name': 'QwkrtezzzTimers'}

  @loader.command()
  async def summertime(self, message):
    """—É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –ª–µ—Ç–∞"""
    timeToSummer = getTime(6, 1)

    await utils.answer(message, (f'–î–æ –ª–µ—Ç–∞ –æ—Å—Ç–∞–ª–æ—Å—å {timeToSummer.days} –¥–Ω–µ–π, {timeToSummer.seconds // 3600} —á–∞—Å–æ–≤, {timeToSummer.seconds // 60 % 60} –º–∏–Ω—É—Ç, {timeToSummer.seconds % 60} —Å–µ–∫—É–Ω–¥.\n'))
